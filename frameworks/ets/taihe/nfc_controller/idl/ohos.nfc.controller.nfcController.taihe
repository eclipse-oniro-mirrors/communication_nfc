/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@!sts_inject("""
static { loadLibrary("nfc_fwk_taihe_controller.z"); }
""")

@!namespace("@ohos.nfc.controller", "nfcController")

enum NfcState: i32 {
  STATE_OFF = 1,
  STATE_TURNING_ON = 2,
  STATE_ON = 3,
  STATE_TURNING_OFF = 4
}

function isNfcAvailable(): bool; // deprecated since API 9, use canIUse("SystemCapability.Communication.NFC.Core") instead

@on_off("nfcStateChange")
function onNfcStateChange(callback: (data: NfcState) => void): void;
@on_off("nfcStateChange")
function offNfcStateChange(callback: Optional<(data: NfcState) => void>): void;

function openNfc(): bool; // deprecated since API 9, use enableNfc() instead
function enableNfc(): void;

function closeNfc(): bool; // deprecated since API 9, use disableNfc() instead
function disableNfc(): void;

function isNfcOpen(): bool;
function getNfcState(): NfcState;
