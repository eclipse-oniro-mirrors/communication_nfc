# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/idl_tool/idl.gni")
import("//build/ohos.gni")
import("//build/ohos_var.gni")
import("../../../nfc.gni")

idl_gen_interface("nfc_controller_interface") {
  sources = [ "idl/INfcController.idl" ]
  configs = [ ":nfc_inner_kits_public_config" ]

  sequenceable_ext_deps = [ "ability_base:want" ]
  log_domainid = "0xD000301"
  log_tag = "Nfc_Controller"
  part_name = "nfc"
  subsystem_name = "communication"
}

config("nfc_inner_kits_config") {
  visibility = [ ":*" ]
  defines = [ "DEBUG" ]
  cflags_cc = [ "-fexceptions" ]

  include_dirs = []
}

config("nfc_inner_kits_public_config") {
  visibility = [ ":*" ]
  defines = []
  if (nfc_service_feature_vendor_applications_enabled) {
    defines += [ "VENDOR_APPLICATIONS_ENABLED" ]
  }
  include_dirs = [
    "${target_gen_dir}",
    "$NFC_DIR/interfaces/inner_api/common",
    "$NFC_DIR/interfaces/inner_api/controller",
  ]
}

ohos_shared_library("nfc_inner_kits_controller") {
  sanitize = {
    cfi = true
    boundary_sanitize = true
    integer_overflow = true
    cfi_cross_dso = true
    debug = false
    ubsan = true
  }
  branch_protector_ret = "pac_ret"
  sources = [
    "ndef_msg_callback_stub.cpp",
    "nfc_controller.cpp",
    "nfc_controller_callback_stub.cpp",
    "nfc_sa_client.cpp",
  ]
  if (nfc_service_feature_vendor_applications_enabled) {
    sources += [
      "on_card_emulation_notify_cb_stub.cpp",
      "query_app_info_callback_stub.cpp",
    ]
  }
  configs = [ ":nfc_inner_kits_config" ]

  public_configs = [ ":nfc_inner_kits_public_config" ]

  deps = [
    ":libnfc_controller_interface_proxy",
    ":nfc_controller_interface",
    "../common:nfc_inner_kits_common"
  ]

  external_deps = [
    "ability_base:want",
    "ability_base:zuri",
    "ability_runtime:dataobs_manager",
    "bundle_framework:appexecfwk_base",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  part_name = "nfc"
  subsystem_name = "communication"
}
